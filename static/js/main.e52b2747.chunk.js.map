{"version":3,"sources":["reportWebVitals.js","store/slider.js","store/store.js","App.js","AppContainer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","data","textColor","backgroundColor","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","copy","color","number","Button","styled","button","props","field","Range","input","TextWrapper","div","Text","p","App","useState","setField","onClick","min","max","step","value","onChange","e","ChangeRange","AppContainer","connect","TextColorAC","BackgroundColorAC","target","render","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.e52b2747.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let data = {\r\n    textColor: [255, 255, 255],\r\n    backgroundColor: [0, 0, 0]\r\n};\r\nexport let sliderReducer = (state = data, action) => {\r\n    switch (action.type) {\r\n        case \"textColor\": {\r\n            let copy={...state,textColor:[...state.textColor]};\r\n            copy.textColor[action.color]=action.number\r\n            return {...copy}\r\n        }\r\n        case \"backgroundColor\": {\r\n            let copy={...state,backgroundColor:[...state.backgroundColor]};\r\n            copy.backgroundColor[action.color]=action.number\r\n            return {...copy}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n};\r\nexport let TextColorAC = (color, number) => ({\r\n    type: \"textColor\",\r\n    color,\r\n    number\r\n});\r\nexport let BackgroundColorAC = (color, number) => ({\r\n    type: \"backgroundColor\",\r\n    color,\r\n    number\r\n});\r\n\r\n\r\n","import {compose, createStore} from \"redux\";\r\nimport {sliderReducer} from \"./slider\";\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport let store=createStore(sliderReducer,composeEnhancers());","import React, {useState} from \"react\";\nimport styled from \"styled-components\"\n\nlet Button = styled.button`\n  ${props => props.field === props.type ? \"background-color:blue;color:white;\" : \"background-color:white;color:black\"}\n`;\nlet Range = styled.input`\n        overflow: hidden;\n        width: 22vw;\n        border:1px solid black;\n        -webkit-appearance: none;\n        background-color:white;\n        &::-webkit-slider-runnable-track {\n          height: 1.8vh;\n          -webkit-appearance: none;\n          color: #13bba4;\n          margin-top: -1px;\n        }\n        &::-webkit-slider-thumb {\n          width: 20px;\n          -webkit-appearance: none;\n          height: 22vh;\n          cursor: ew-resize;border:2px solid black;\n          background:${props => props.color};\n          box-shadow: -22vw 0 0 22vw ${props => props.color};\n         }\n`\nlet TextWrapper = styled.div`\n        width:36vw;\n        background-color:${props => \"rgb(\"+props.color+\")\"}\n`\nlet Text = styled.p`\n  color:${props => \"rgb(\"+props.color+\")\"}\n`\nconst App = (props) => {\n    let [field, setField] = useState(\"color\")\n    return (\n        <div>\n            <fieldset>\n                <legend>Select:</legend>\n                <Button type=\"color\" onClick={() => {\n                    setField(\"color\")\n                }} field={field}>color</Button>\n                <Button type=\"background\" onClick={() => {\n                    setField(\"background\")\n                }} field={field}>backgroundColor</Button>\n            </fieldset>\n            <Range type=\"range\" min=\"0\" max=\"250\" color=\"red\" step=\"1\"\n                   value={field === \"background\" ? props.backgroundColor[0] : props.textColor[0]} onChange={(e) => {\n                props.ChangeRange(field, 0, e)\n            }}/>\n            <Range type=\"range\" min=\"0\" max=\"250\" color=\"green\" step=\"1\"\n                   value={field === \"background\" ? props.backgroundColor[1] : props.textColor[1]} onChange={(e) => {\n                props.ChangeRange(field, 1, e)\n            }}/>\n            <Range type=\"range\" min=\"0\" max=\"250\" color=\"blue\" step=\"1\"\n                   value={field === \"background\" ? props.backgroundColor[2] : props.textColor[2]} onChange={(e) => {\n                props.ChangeRange(field, 2, e)\n            }}/>\n            <TextWrapper color={props.backgroundColor}>\n                <Text color={props.textColor}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean posuere nibh ac pharetra\n                    efficitur. In\n                    consectetur lorem vitae consequat aliquam. Fusce arcu elit, dignissim blandit finibus in, ornare et\n                    ipsum. Fusce efficitur lacinia fermentum. Etiam risus ipsum, hendrerit vel mi non, malesuada\n                    hendrerit\n                    sapien. Nulla ex elit, rhoncus et arcu nec, dignissim pretium risus. In hac habitasse platea\n                    dictumst.\n                    Duis elementum tristique luctus. Aenean rhoncus metus a dignissim cursus. Duis sapien elit, pharetra\n                    in\n                    pretium et, tempus sit amet risus. Ut sit amet fermentum magna. Fusce eleifend porta nulla vitae\n                    cursus.\n                    Mauris maximus sit amet diam in volutpat. Quisque auctor mollis risus, ut elementum libero aliquam\n                    lacinia. Vestibulum enim sapien, auctor porta neque vitae, fringilla consectetur ipsum. Integer\n                    consectetur sagittis erat in mollis.</Text>\n            </TextWrapper>\n        </div>\n    )\n}\n\nexport default App;\n","import {connect} from \"react-redux\";\r\nimport {BackgroundColorAC, TextColorAC} from \"./store/slider\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nlet MSTP=(state)=>({\r\n    backgroundColor:state.backgroundColor,\r\n    textColor: state.textColor\r\n})\r\nlet AppHOC=(props)=>{\r\n    let ChangeRange=(type,color,e)=>{\r\n        type===\"background\"?props.BackgroundColorAC(color,e.target.value):props.TextColorAC(color,e.target.value)\r\n    };\r\n    return (\r\n        <App ChangeRange={ChangeRange} {...props}/>\r\n    )\r\n};\r\nexport let AppContainer=connect(MSTP,{TextColorAC,BackgroundColorAC})(AppHOC);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {AppContainer} from \"./AppContainer\";\n\nlet render=()=>{ReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)};\nrender();\nstore.subscribe(()=>{\n    render()\n});\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}